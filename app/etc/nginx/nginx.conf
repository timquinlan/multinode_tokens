user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

# Load Modules
load_module /usr/lib/nginx/modules/ngx_http_js_module.so; # NGINX Javascript

events {
    worker_connections  1024;
}

stream {
resolver 127.0.0.11 ipv6=off; # Docker DNS
   server {
     listen 9000;
     zone_sync;
     zone_sync_server app1:9000;
     zone_sync_server app2:9000;
     #look at tuning and security directives such as:
        #zone_sync_timeout
        #zone_sync_ssl
        #zone_sync_ssl_certificate
        #zone_sync_ssl_certificate_key
     
   }
}

http {


    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_id"';

    # NGINX Plus Additional NGINX Metrics
    log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http2" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status $request_id' ;

    # access_log  /var/log/nginx/access.log  main; # Default
    access_log  /var/log/nginx/access.log  main_ext; # NGINX Plus Additional NGINX Metrics

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    resolver 127.0.0.11 ipv6=off; # Docker DNS

    keyval_zone zone=tokens:64k timeout=30 sync;
    keyval $combined_args $myvar zone=tokens;

    upstream auth_upstreams {
        zone auth_upstreams 64k;
        server auth1:80 max_fails=1 fail_timeout=1s;
        keepalive 32;
    }


    upstream api_upstreams {
        zone api_upstreams 64k;
        server api1:80 max_fails=1 fail_timeout=1s;
        keepalive 32;
    }

server {
    listen 80 default_server;
    server_name _;
    status_zone status_page;

    location / {
       set $combined_args $http_remote_user:$http_user_agent;
       auth_request /kvtest;
       auth_request_set $authkey $myvar;
       proxy_set_header X-Authkey $authkey;
       proxy_pass_request_headers on;
       proxy_pass http://api_upstreams;
    }

    location /kvtest {
       #internal;
       js_import /etc/nginx/njs/KvOperations.js;
       js_content KvOperations.CheckKv;
    }
 
    location /auth {
       internal; 
       proxy_pass http://auth_upstreams;
    }

    location /api {
        api write=on;
        allow 172.0.0.0/8; #allow connections from within docker network
        allow 127.0.0.1; #allow connections from lo
        deny all;
    }

    location = /dashboard.html {
        root /usr/share/nginx/html;
    }
}
}
